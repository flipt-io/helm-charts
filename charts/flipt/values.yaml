replicaCount: 1
minReadySeconds: 0

image:
  repository: docker.flipt.io/flipt/flipt
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

test:
  # Can pin the version of busybox to a specific version
  # tag: '1.36.1'

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 100
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 100
  seccompProfile:
    type: "RuntimeDefault"

## Expose the flipt service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  enabled: true
  type: ClusterIP
  httpPort: 8080
  grpcPort: 9000
  ## Service annotations. Can be templated.
  annotations: {}
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: flipt.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  enabled: false
  maxUnavailable: 25%

nodeSelector: {}
tolerations: []
affinity: {}

## Container ports
##
containerPorts:
  ## http is the Flipt HTTP container port
  http: 8080
  ## grpc Flipt GRPC container port
  grpc: 9000

## Persistence Parameters
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## enabled enables persistence using Persistent Volume Claims
  enabled: false
  ## annotations are additional custom annotations for the PVC
  annotations: {}
  ## existingClaim sets the name of an existing PVC to use for persistence
  existingClaim: ""
  ## subPath is the name of a volume's sub path to mount for persistence
  subPath: ""
  ## accessModes [array] Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  ## storageClass sets Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## size is the Persistent Volume size
  size: 5Gi

flipt:
  # httpPort is the Flipt HTTP container port
  # @deprecated use containerPorts.http instead
  httpPort: 8080
  # grpcPort is the Flipt GRPC container port
  # @deprecated use containerPorts.grpc instead
  grpcPort: 9000
  # extraEnvVars is a list of extra environment variables to set e.g.
  # - name: FLIPT_LOG_LEVEL
  #   value: debug
  extraEnvVars: []
  envFrom: []
  config:
    log:
      level: INFO
      encoding: console
      grpc_level: ERROR

    server:
      protocol: http
      host: 0.0.0.0
      https_port: 443
      http_port: 8080
      grpc_port: 9000

    db:
      url: file:/var/opt/flipt/flipt.db
      max_idle_conn: 2
      max_open_conn: 0 # unlimited
      conn_max_lifetime: 0 # unlimited

migration:
  # If enabled will run the migration script over your db before rolling out
  # a new deployment. This will run in a helm hook so will get cleaned up on
  # success.
  enabled: false
  # How long to let the job run for kube will terminate it.
  deadLine: 600 # sec

metrics:
  serviceMonitor:
    # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
    enabled: false
    # -- Port where to scrape metrics from
    port: http
    # -- Namespace selector for ServiceMonitor resources
    namespaceSelector: {}
    # -- ServiceMonitor annotations
    annotations: {}
    # -- Additional ServiceMonitor labels
    labels: {}
    # -- ServiceMonitor scrape interval
    # Default is 15s because included recording rules use a 1m rate, and scrape interval needs to be at
    # least 1/4 rate interval.
    interval: 15s
    # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
    scrapeTimeout: null
    # -- ServiceMonitor relabel configs to apply to samples before scraping
    # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    relabelings: []
    # -- ServiceMonitor will use http by default, but you can pick https as well
    scheme: http
    # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
    tlsConfig: null

# extraVolumeMounts is a list of extra volumes to mount to the flipt container
# - name: flipt-git-ssh-key
#   mountPath: /etc/flipt/ssh.key
#   subPath: ssh.key
extraVolumeMounts: []

# extraVolumes is a list of extra volumes to mount to the pod
# - name: flipt-git-ssh-key
#   secret:
#     secretName: flit-git-ssh-key-secret
extraVolumes: []

# ssh contains some SSH specific configuration parameters
ssh:
  # knownHosts is the contents of a custom known hosts file
  # for use with SSH authentication and the Git backend for Flipt
  knownHosts: ""
